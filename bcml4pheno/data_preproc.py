# AUTOGENERATED! DO NOT EDIT! File to edit: data_preproc.ipynb (unless otherwise specified).

__all__ = ['label_predictors']

# Cell
import numpy as np

# Cell
def label_predictors(data, isSig, bgType=None):
    r"""
    Takes in $? \times M$ array of predictors ($?$ points in $\mathbb{R}^m$) and appends a
    label to each row ($1$ if signal, $0$ or a negative integer if background) to prepare for training/testing.

    Returns a $? \times (M + 1)$ array of labelled predictors where the final column is $0$ if `isSig` is `True`
    and either $0$ (if `bgType` isn't passed) or `bgType` (if it is passed; supposed to be a negative integer
    marking background type, i.e., $-2$ denotes the background of type $2$) if `isSig` is `False`.
    """
    append_val = 1 if isSig else (bgType if bgType else 0)
    return np.concatenate((data, np.ones((len(data),1)) * append_val), axis=1)